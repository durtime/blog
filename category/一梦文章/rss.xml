<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Durtime • Posts by &#34;一梦文章&#34; category</title>
        <link>https://my.durtime.top</link>
        <description>The aroma of black tea no longer exists</description>
        <language>zh-CN</language>
        <pubDate>Sat, 28 May 2022 22:36:02 +0800</pubDate>
        <lastBuildDate>Sat, 28 May 2022 22:36:02 +0800</lastBuildDate>
        <category>教程</category>
        <category>Hexo</category>
        <category>主題</category>
        <category>butterfly</category>
        <category>Aplayer</category>
        <category>Docker</category>
        <category>Markdown语法</category>
        <category>推荐</category>
        <category>算法</category>
        <category>大数据</category>
        <category>nginx</category>
        <category>ssh</category>
        <category>hadoop</category>
        <category>Ip</category>
        <category>运维</category>
        <item>
            <guid isPermalink="true">https://my.durtime.top/posts/65ad05d8/</guid>
            <title>一梦文章推荐业务(一)</title>
            <link>https://my.durtime.top/posts/65ad05d8/</link>
            <category>推荐</category>
            <category>大数据</category>
            <category>hadoop</category>
            <pubDate>Sat, 28 May 2022 22:36:02 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;1-数据库迁移需求&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-数据库迁移需求&#34;&gt;#&lt;/a&gt; 1 数据库迁移需求&lt;/h1&gt;
&lt;p&gt;业务 mysql 数据库中的数据，会同步到我们的 hadoop 的 hive 数据仓库中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为了避免直接连接、操作业务数据&lt;/li&gt;
&lt;li&gt;同步一份数据在集群中方便进行数据分析操作&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hive&amp;gt; show databases;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;default&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;profile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;toutiao&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Time taken: 0.017 seconds, Fetched: 3 row(s)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;创建 hive 业务数据库 onedream&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;create database if not exists onedream comment &amp;quot;user,news information of onedream mysql&amp;quot; location &amp;#x27;/user/hive/warehouse/onedream.db/&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;2-sqoop导入&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-sqoop导入&#34;&gt;#&lt;/a&gt; 2 sqoop 导入&lt;/h1&gt;
&lt;p&gt;用户：基本信息，关注，收藏，搜索，订阅（设置选择喜好频道）&lt;br&gt;
文章：分类，文章&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;array=(user_profile user_basic news_user_channel news_channel user_follow user_blacklist user_search news_collection news_article_basic news_article_content news_read news_article_statistic user_material)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;for table_name in $&amp;#123;array[@]&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sqoop import \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        --connect jdbc:mysql://192.168.19.137/onedream \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        --username root \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        --password password \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        --table $table_name \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        --m 5 \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        --hive-home /root/bigdata/hive \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        --hive-import \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        --create-hive-table  \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        --hive-drop-import-delims \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        --warehouse-dir /user/hive/warehouse/onedream.db \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        --hive-table onedream.$table_name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Mysql 导入对应 hive 类型:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;MySQL(bigint) --&amp;gt; Hive(bigint) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL(tinyint) --&amp;gt; Hive(tinyint) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL(int) --&amp;gt; Hive(int) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL(double) --&amp;gt; Hive(double) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL(bit) --&amp;gt; Hive(boolean) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL(varchar) --&amp;gt; Hive(string) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL(decimal) --&amp;gt; Hive(double) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MySQL(date/timestamp) --&amp;gt; Hive(string)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;3-tfidf模型的训练&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-tfidf模型的训练&#34;&gt;#&lt;/a&gt; 3 TFIDF 模型的训练&lt;/h1&gt;
&lt;p&gt;步骤：&lt;br&gt;
1、读取 N 篇文章数据&lt;br&gt;
 2、文章数据进行分词处理&lt;br&gt;
 3、TFIDF 模型训练保存，spark 使用 count 与 idf 进行计算&lt;br&gt;
 4、利用模型计算 N 篇文章数据的 TFIDF 值&lt;/p&gt;
&lt;h2 id=&#34;分词&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分词&#34;&gt;#&lt;/a&gt; 分词&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 分词&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;def segmentation(partition):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    import os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    import re&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    import jieba&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    import jieba.analyse&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    import jieba.posseg as pseg&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    import codecs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    abspath = &amp;quot;/root/words&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # 结巴加载用户词典&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    userDict_path = os.path.join(abspath, &amp;quot;ITKeywords.txt&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    jieba.load_userdict(userDict_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # 停用词文本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    stopwords_path = os.path.join(abspath, &amp;quot;stopwords.txt&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def get_stopwords_list():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;&amp;quot;&amp;quot;返回stopwords列表&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        stopwords_list = [i.strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                          for i in codecs.open(stopwords_path).readlines()]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return stopwords_list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # 所有的停用词列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    stopwords_list = get_stopwords_list()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    # 分词&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    def cut_sentence(sentence):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;quot;&amp;quot;&amp;quot;对切割之后的词语进行过滤，去除停用词，保留名词，英文和自定义词库中的词，长度大于2的词&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # print(sentence,&amp;quot;*&amp;quot;*100)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # eg:[pair(&amp;#x27;今天&amp;#x27;, &amp;#x27;t&amp;#x27;), pair(&amp;#x27;有&amp;#x27;, &amp;#x27;d&amp;#x27;), pair(&amp;#x27;雾&amp;#x27;, &amp;#x27;n&amp;#x27;), pair(&amp;#x27;霾&amp;#x27;, &amp;#x27;g&amp;#x27;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        seg_list = pseg.lcut(sentence)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        seg_list = [i for i in seg_list if i.flag not in stopwords_list]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        filtered_words_list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for seg in seg_list:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            # print(seg)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if len(seg.word) &amp;lt;= 1:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                continue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            elif seg.flag == &amp;quot;eng&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if len(seg.word) &amp;lt;= 2:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    continue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                else:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    filtered_words_list.append(seg.word)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            elif seg.flag.startswith(&amp;quot;n&amp;quot;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                filtered_words_list.append(seg.word)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            elif seg.flag in [&amp;quot;x&amp;quot;, &amp;quot;eng&amp;quot;]:  # 是自定一个词语或者是英文单词&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                filtered_words_list.append(seg.word)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return filtered_words_list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for row in partition:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sentence = re.sub(&amp;quot;&amp;lt;.*?&amp;gt;&amp;quot;, &amp;quot;&amp;quot;, row.sentence)    # 替换掉标签数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        words = cut_sentence(sentence)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        yield row.article_id, row.channel_id, words&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;训练模型，得到每个文章词的频率 Counts 结果&lt;/p&gt;
&lt;h1 id=&#34;词语与词频统计&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#词语与词频统计&#34;&gt;#&lt;/a&gt; 词语与词频统计&lt;/h1&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 词语与词频统计&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;from pyspark.ml.feature import CountVectorizer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 总词汇的大小，文本中必须出现的次数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cv = CountVectorizer(inputCol=&amp;quot;words&amp;quot;, outputCol=&amp;quot;countFeatures&amp;quot;, vocabSize=200*10000, minDF=1.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 训练词频统计模型&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cv_model = cv.fit(words_df)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cv_model.write().overwrite().save(&amp;quot;hdfs://hadoop-master:9000/headlines/models/CV.model&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
    </channel>
</rss>
